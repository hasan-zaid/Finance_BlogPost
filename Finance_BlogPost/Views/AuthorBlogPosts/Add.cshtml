@model Finance_BlogPost.Models.ViewModels.AddBlogPostViewModel
@{
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<div class="py-2">
    <div class="container">
        <a asp-controller="AuthorBlogPosts" asp-action="List" class="btn dark-btn mb-5">
            <i class="fas fa-arrow-left"></i> Back
        </a>
        <h2>Add New BlogPost</h2>
    </div>
</div>

<div class="container py-5">
    <form method="post">

        <div class="mb-3">
            <label class="form-label">Heading</label>
            <input type="text" class="form-control" id="heading" asp-for="Heading" required />
            <span class="text-danger" asp-validation-for="Heading"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Page Title</label>
            <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" required />
            <span class="text-danger" asp-validation-for="PageTitle"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Content</label>
            <textarea class="form-control" id="content" asp-for="Content" required></textarea>
            <span class="text-danger" asp-validation-for="Content"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Short Description</label>
            <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" required />
            <span class="text-danger" asp-validation-for="ShortDescription"></span>
        </div>
        <div class="mb-3">
            <label class="form-label">Blog Image Upload</label>
            <input type="file" id="blogImageUpload" class="form-control" required />

            <img src="" id="blogImageDisplay" style="display:none;width: 300px;" />
        </div>

        <div class="mb-3">
            <input type="text" class="form-control" id="blogImageUrl" asp-for="BlogImageUrl" hidden />
        </div>

        <div class="mb-3">
            <label class="form-label">URL Handle</label>
            <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" required />
            <span class="text-danger" asp-validation-for="UrlHandle"></span>
        </div>

        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
            <label class="form-check-label">
                Is Visible?
            </label>
        </div>

        <div class="mb-3">
            <label class="form-label">Tags</label>
            <select class="form-select"
                    asp-items="@Model.Tags"
                    asp-for="SelectedTags">
            </select>
        </div>


        <div class="mb-3">
            <button type="submit" class="btn dark-btn">
                Save
            </button>
        </div>


    </form>
</div>



@section Scripts {
    @* Render the validation scripts partial view *@
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        // Initialize Tiny Editor 
        tinymce.init({
            selector: '#content',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
        });

        // Get elements by their IDs
        const blogUploadElement = document.getElementById('blogImageUpload');
        const blogImageUrlElement = document.getElementById('blogImageUrl');
        const blogImageDisplayElement = document.getElementById('blogImageDisplay');

        // Function to upload blog image
        async function uploadblogImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            try {
                let response = await fetch('/api/media', {
                    method: 'POST',
                    headers: {
                        'Accept': '*/*',
                    },
                    body: data
                });

                let result = await response.json();

                if (response.ok) {
                    blogImageUrlElement.value = result.link;
                    blogImageDisplayElement.src = result.link;
                    blogImageDisplayElement.style.display = 'block';
                } else {
                    console.error('Image upload failed:', result);
                    alert('Image upload failed: ' + result.message);
                }
            } catch (error) {
                console.error('Error uploading image:', error);
                alert('Error uploading image: ' + error.message);
            }
        }

        // Add event listener for image upload
        blogUploadElement.addEventListener('change', uploadblogImage);
    </script>
}
